{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAoB/B,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfR,EAAS,QAAYQ,OAANZ,EAAM,OAEpDO,EAAK,sBAAqCK,OAAfR,EAAS,QAAYQ,OAANZ,EAAM,M,GAEnDA,E,IACFa,MAAK,SAAAP,G,OAAWZ,EAAAoB,OAAOC,QAAQT,E,IAAUU,OAAM,SAAAT,G,OAAUb,EAAAoB,OAAOG,QAAQV,E,IA1B/EX,EAAKC,KAAKqB,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJF,IAAIlB,EAASmB,OAAOzB,EAAKM,OAAOoB,OAC5BtB,EAAQqB,OAAOzB,EAAKI,MAAMsB,OAC1BrB,EAAOoB,OAAOzB,EAAKK,KAAKqB,OAEjBC,EAAE,EAAGA,EAAIrB,EAAQqB,GAAG,EAAG,CAE9BpB,EAAcoB,EAAE,EADQvB,EAAQC,EAAOsB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\nlet amount = Number(refs.amount.value);\nlet delay = Number(refs.delay.value);\nlet step = Number(refs.step.value);\n\n  for (let i=0; i < amount; i+=1) {\n    let notificationDelay = delay + step * i;\n    createPromise(i+1, notificationDelay);\n    }\n}\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position} in ${delay}ms`)\n        }\n      }, delay)\n    }).then(resolve => Notify.success(resolve)).catch(reject => Notify.failure(reject))\n  }\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","Notify","success","catch","failure","addEventListener","event","preventDefault","Number","value","i"],"version":3,"file":"03-promises.a436b305.js.map"}